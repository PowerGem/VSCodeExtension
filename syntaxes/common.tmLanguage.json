{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "common",
	"patterns": [
		{ "include": "#_toplevel" }
	],
	"repository": {
		"_toplevel": {"patterns": [
			{ "include": "pg#comments"},
			{ "include": "pg#commands"},
			{ "include": "#area" },
			{ "include": "#areas" },
			{ "include": "#branch" },
			{ "include": "#branch-busname" },
			{ "include": "#bus" },
			{ "include": "#bus-busname" },
			{ "include": "#kvrange" },
			{ "include": "#section" },
			{ "include": "#system" },
			{ "include": "#branch-name" }
		]},
		"area": {			
			"patterns": 
			[{
				"match": "(?xi)(to\\s+)?(area|zone)\\s+([0-9]+)\\s*",
				"captures": {
					"1": { "name": "keyword.operator.common" },
					"2": { "name": "entity.name.type.common" },
					"3": { "name": "entity.name.tag.common" }
				}}
		]},
		"areas": {			
			"patterns": 
			[{
				"match": "(?xi)(areas|zones)(\\s+([0-9]+)\\s+([0-9]+))\\s*",
				"captures": {
					"1": { "name": "entity.name.type.common" },
					"2": { "name": "entity.name.tag.common" }
				}}
		]},
		"branch": {			
			"patterns": 
			[{
				"name": "entity.name.type.common",
				"begin": "(?xi)\\s*(branch|line)\\s*(?=\\s*from\\s*bus\\s.*\\sto\\s*bus\\s.*\\s(ckt|circuit))",
				"end": "(?xi)(?=\\s*factor|(?=$))", "patterns": [
					{"include": "#bus"},
					{"include": "#curcuit"},
					{"include": "#section"},
					{"include": "pg"}
				]}
		]},
		"branch-busname": {			
			"patterns": 
			[{
				"name": "entity.name.type.common",
				"begin": "(?xi)\\s*(branch|line)\\s*(?=\\s*from\\s*bus\\s.*\\sto\\s*bus\\s.*\\s(ckt|circuit))",
				"end": "(?xi)(?=\\s*factor|(?=$))", "patterns": [
					{"include": "#bus-busname"},
					{"include": "#curcuit"},
					{"include": "#section"},
					{"include": "pg"}
				]}
			]},
		"branch-name": {"patterns": [
						{"include": "#strings-unlimited"}
		]},
		"bus": {			
				"patterns": 
				[{
					"match": "(?xi)\\s*\\b(from\\s+|to\\s+)?(bus)\\s+([0-9]+)\\s*",
					"captures": {
						"1": { "name": "keyword.operator.common" },
						"2": { "name": "entity.name.type.common" },
						"3": { "name": "entity.name.tag.common" }
					}}
		]},
		"bus-bnu": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+((bus)(?=\\s+([0-9]+))|((bus)))",
				"captures": {
					"2": { "name": "entity.name.type.bus" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"bus-bna": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+((bus)\\s+(\"[^\"]*\"|'[^']*'|\\w+)|((bus)))",
				"captures": {
					"2": { "name": "entity.name.type.bus" },
					"3": { "name": "string.quoted.busname" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"buses": {			
			"patterns": 
			[{
				"match": "(?xi)(buses)(\\s+([0-9]+)\\s+([0-9]+))\\s*",
				"captures": {
					"1": { "name": "entity.name.type.common" },
					"2": { "name": "entity.name.tag.common" }
				}}
		]},
		"bus-busname": {			
			"patterns": 
			[{
				"match": "(?xi)\\s*\\b(from\\s+|to\\s+)?(bus)\\s+((\"[^\"]*\")|('[^']*')|(\\w+))\\s*",
				"captures": {
					"1": { "name": "keyword.operator.common" },
					"2": { "name": "entity.name.type.common" },
					"4": { "name": "string.quoted.common" },
					"5": { "name": "string.quoted.common" },
					"6": { "name": "string.unquoted.common" }
				}}
		]},
		"curcuit": {
			"patterns": 
			[{
				"name" : "string.quoted",
				"match": "(?xi)\\s*\\b(ckt|circuit)\\s+[\"']?(&)?([\\w@][\\w@]?)(?=\\b)[\"']?\\s*",
				"captures": {
					"1": { "name": "entity.name.type.common" },
					"2": { "name": "keyword.operator.common" },
					"3": { "name": "entity.name.tag.common" }
				}}
		]},
		"float": {
			"patterns": 
			[{
				"name" : "constant.numeric.float",
				"match": "(\\-|\\+)?([0-9]*\\.)?[0-9]+(?![\\-\\+\\.])"}
		]},
		"id": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+((id)\\s+(\"[^\"]*\"|'[^']*'|\\w+)|((id)))",
				"captures": {
					"2": { "name": "entity.other.attribute-name.id" },
					"3": { "name": "string.quoted.idname" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"kvrange": {"patterns": [{"match": "(?xi)\\s*(kvrange)\\s+([0-9]*\\.?[0-9]+)\\s+([0-9]*\\.?[0-9]+)\\s*",
			"captures": {
				"1": { "name": "entity.name.type.common" },
				"2": { "name": "constant.numeric.common" },
				"3": { "name": "constant.numeric.common" }		
		}}]},
		"language-attribute": {			
				"patterns": 
				[{
					"match": "(?xi)\\s*(%|\\bpercent\\b|mw\\b|mvar\\b)",
					"captures": {
						"1": { "name": "entity.other.attribute-name.language" }
					}}
		]},	
		"language-attribute-pmax": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+\\b(pmax)\\b",
				"captures": {
					"1": { "name": "entity.other.attribute-name.pmax" }
				}}
		]},		
		"language-operators": {			
				"patterns": 
				[{
					"match": "(?xi)\\s+\\b(by|to|from|at)\\b",
					"captures": {
						"1": { "name": "keyword.operator.language" }
					}}
		]},
		"language-operators-by": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+\\b(by)\\b",
				"captures": {
					"1": { "name": "keyword.operator.language.by" }
				}}
		]},		
		"language-operators-to": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+\\b(to)\\b",
				"captures": {
					"1": { "name": "keyword.operator.language.to" }
				}}
		]},		
		"language-types": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+\\b(gen(s|eration)?|load(p|q)?|shunt)\\b",
				"captures": {
					"1": { "name": "entity.name.type.language" }
				}}
		]},	
		"load-id": {			
				"patterns": 
				[{
					"match": "(?xi)\\s*(load)\\s+([0-9]+)\\s+(\"[^\"]*\"|'[^']*'|([0-9\\w]+))",
					"captures": {
						"1": { "name": "entity.name.type.common" },
						"2": { "name": "entity.name.tag.common" },
						"3": { "name": "string.quoted.common" }
					}}
		]},	
		"node": {			
				"patterns": 
				[{
					"match": "(?xi)\\s*\\b(from\\s+|to\\s+)?(node)\\s+([0-9]+)\\s*",
					"captures": {
						"1": { "name": "keyword.operator.common" },
						"2": { "name": "entity.name.type.common" },
						"3": { "name": "entity.name.tag.common" }
					}}
		]},
		"node-busname": {			
			"patterns": 
			[{
				"match": "(?xi)\\s*\\b(from\\s+|to\\s+)?(node)\\s+((\"[^\"]*\")|('[^']*')|(\\w+))\\s*",
				"captures": {
					"1": { "name": "keyword.operator.common" },
					"2": { "name": "entity.name.type.common" },
					"4": { "name": "string.quoted.common" },
					"5": { "name": "string.quoted.common" },
					"6": { "name": "string.unquoted.common" }
				}}
		]},			
		"section": {			
			"patterns": 
			[{
				"match": "(?xi)\\s*\\b(section)\\s+([0-9]+)",
				"captures": {
					"1": { "name": "entity.name.type.common" },
					"2": { "name": "entity.name.tag.common" }
				}}
		]},
		"substation": {			
			"patterns": 
			[{
				"match": "(?xi)\\s*\\b(sub(station)?)\\s+((\"[^\"]*\")|('[^']*')|(\\w+))\\s*",
				"captures": {
					"1": { "name": "entity.name.type.common" },
					"4": { "name": "string.quoted.common" },
					"5": { "name": "string.quoted.common" },
					"6": { "name": "string.unquoted.common" }
				}}
		]},
		"owner": {			
				"patterns": 
				[{
					"match": "(?xi)\\s*(owner)\\s+([0-9]+)\\s*",
					"captures": {
						"1": { "name": "entity.name.type.common" },
						"2": { "name": "entity.name.tag.common" }
					}}
		]},
		"owners": {			
			"patterns": 
			[{
				"match": "(?xi)(owners)(\\s+([0-9]+)\\s+([0-9]+))\\s*",
				"captures": {
					"1": { "name": "entity.name.type.common" },
					"2": { "name": "entity.name.tag.common" }
				}}
		]},			
		"strings-unlimited": {			
				"patterns": 
				[
						{"include": "#string-double-unlimited"},
						{"include": "#string-single-unlimited"},
						{"include": "#string-unquoted"}
					]},
		"string-double-unlimited": {
			"name": "string.quoted.double.common",
			"begin": "(?<![\"'])\"(?=.*\")",
			"end": "[\"\r\n]",
			"patterns": [
				{
					"name": "constant.character.escape.common",
					"match": "\\\\."
				}
			]
		},
		"string-single-unlimited": {
			"name": "string.quoted.single.common",
			"begin": "(?<![\"'])'(?=.*')",
			"end": "['\r\n]",
			"patterns": [
				{
					"name": "constant.character.escape.common",
					"match": "\\\\."
				}
			]
		},
		"string-unquoted": {"name": "string.unquoted.common", "match":"\\b\\w+\\b"},
		"system": {			
			"patterns": 
			[{
				"name": "entity.name.type.common",
				"begin": "(?xi)((sub)?system)\\s*",
				"end": "\\s*((?=-?[0-9]*\\.?[0-9]+)|(?=$))", "patterns": [
					{"include": "#strings-unlimited"},
					{"include": "#kvrange"},
					{"include": "pg"}
				]}
		]}
	},
	"scopeName": "source.pg.common"
}