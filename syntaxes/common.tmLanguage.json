{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "common",
	"patterns": [
		{ "include": "#_toplevel" }
	],
	"repository": {
		"_toplevel": {"patterns": [
			{ "include": "pg#comments"},
			{ "include": "pg#commands"},
			{ "include": "#area" },
			{ "include": "#areas" },
			{ "include": "#branch" },
			{ "include": "#branch-busname" },
			{ "include": "#bus" },
			{ "include": "#bus-busname" },
			{ "include": "#kvrange" },
			{ "include": "#section" },
			{ "include": "#system" },
			{ "include": "#branch-name" }
		]},
		"area-retire": {			
			"patterns": 
			[{
				"match": "(?xi)(to\\s+)?(area|zone)\\s+([0-9]+)\\s*",
				"captures": {
					"1": { "name": "keyword.operator.common" },
					"2": { "name": "entity.name.type.common" },
					"3": { "name": "entity.name.tag.common" }
				}}
		]},
		"areas-retire": {			
			"patterns": 
			[{
				"match": "(?xi)(areas|zones)(\\s+([0-9]+)\\s+([0-9]+))\\s*",
				"captures": {
					"1": { "name": "entity.name.type.common" },
					"2": { "name": "entity.name.tag.common" }
				}}
		]},
		"area": {			
			"patterns": 
			[{
				"name": "entity.name.type.area-zone",
				"match": "(?xi)\\s+(?:(?:area|zone)\\s+([0-9]+)|((area|zone)))\\b",
				"captures": {
					"1": { "name": "entity.name.tag.areas" },
					"2":{"name": "invalid.illegal"},
					"3":{"name": "markup.underline"}
				}}
		]},
		"areas": {			
			"patterns": 
			[{
				"name": "entity.name.type.areas-zones",
				"match": "(?xi)(?:(?:areas|zones)(\\s+[0-9]+\\s+[0-9]+)|((areas|zones)))\\b",
				"captures": {
					"1": { "name": "entity.name.tag.areaids" },
					"2":{"name": "invalid.illegal"},
					"3":{"name": "markup.underline"}
				}}
		]},
		"block": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+((block)\\s+([0-9]+)|((block)))\\b",
				"captures": {
					"2": { "name": "entity.other.attribute-name.block" },
					"3": { "name": "entity.name.tag.bus" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"branch": {			
			"patterns": 
			[{
				"name": "entity.name.type.common",
				"begin": "(?xi)\\s*(branch|line)\\s*(?=\\s*from\\s*bus\\s.*\\sto\\s*bus\\s.*\\s(ckt|circuit))\\b",
				"end": "(?xi)(?=\\s*factor|(?=$))", "patterns": [
					{"include": "#bus"},
					{"include": "#curcuit"},
					{"include": "#section"},
					{"include": "pg"}
				]}
		]},
		"branch-busname": {			
			"patterns": 
			[{
				"name": "entity.name.type.common",
				"begin": "(?xi)\\s*(branch|line)\\s*(?=\\s*from\\s*bus\\s.*\\sto\\s*bus\\s.*\\s(ckt|circuit))\\b",
				"end": "(?xi)(?=\\s*factor|(?=$))", "patterns": [
					{"include": "#bus-busname"},
					{"include": "#curcuit"},
					{"include": "#section"},
					{"include": "pg"}
				]}
			]},
		"branch-name": {"patterns": [
						{"include": "#strings-unlimited"}
		]},
		"breaker-br": {
			"patterns": 
			[{
				"name" : "string.quoted",
				"match": "(?xi)\\s*\\b((breaker)\\s+(?:(?<q>\"|')[^'\"]+\\k<q>|([^'\"\\s]+))|((breaker))\\b)",
				"captures": {
					"2": { "name": "entity.name.type.machine" },
					"4": { "name": "entity.name.tag.machineid" },
					"5":{"name": "invalid.illegal"},
					"6":{"name": "markup.underline"}
				}}
		]},
		"bus": {			
				"patterns": 
				[{
					"match": "(?xi)\\s*\\b(from\\s+|to\\s+)?(bus)\\s+([0-9]+)\\s*",
					"captures": {
						"1": { "name": "keyword.operator.common" },
						"2": { "name": "entity.name.type.common" },
						"3": { "name": "entity.name.tag.common" }
					}}
		]},
		"bus-bnu": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+((bus)\\s+([0-9]+)|((bus))\\b)",
				"captures": {
					"2": { "name": "entity.name.type.bus" },
					"3": { "name": "entity.name.tag.bus" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"bus-bna": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+((bus)\\s+(\"[^\"]*\"|'[^']*'|\\w+)|((bus))\\b)",
				"captures": {
					"2": { "name": "entity.name.type.bus" },
					"3": { "name": "string.quoted.busname" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"buses": {			
			"patterns": 
			[{
				"match": "(?xi)(buses)(\\s+([0-9]+)\\s+([0-9]+))\\s*",
				"captures": {
					"1": { "name": "entity.name.type.common" },
					"2": { "name": "entity.name.tag.common" }
				}}
		]},
		"buses-all": {			
			"patterns": 
			[{
				"match": "(?xi)(all)\\s+(buses)\\s*",
				"captures": {
					"1": { "name": "keyword.operator.all" },
					"2": { "name": "entity.name.type.buses" }
				}}
		]},
		"busrange": {			
			"patterns": 
			[{
				"match": "(?xi)(busrange)(\\s+([0-9]+)\\s+([0-9]+))\\s*",
				"captures": {
					"1": { "name": "entity.name.type.common" },
					"2": { "name": "entity.name.tag.common" }
				}}
		]},
		"bus-busname": {			
			"patterns": 
			[{
				"match": "(?xi)\\s*\\b(from\\s+|to\\s+)?(bus)\\s+((\"[^\"]*\")|('[^']*')|(\\w+))\\s*",
				"captures": {
					"1": { "name": "keyword.operator.common" },
					"2": { "name": "entity.name.type.common" },
					"4": { "name": "string.quoted.common" },
					"5": { "name": "string.quoted.common" },
					"6": { "name": "string.unquoted.common" }
				}}
		]},
		"curcuit": {
			"patterns": 
			[{
				"name" : "string.quoted",
				"match": "(?xi)\\s*\\b(ckt|circuit)\\s+(&)?(?:(?<q>\"|')[^'\"]{1,2}\\k<q>|([^'\"\\s]{1,2}))\\s*",
				"captures": {
					"1": { "name": "entity.other.attribute-name.circuit" },
					"2": { "name": "keyword.operator.circuit" },
					"4": { "name": "entity.name.tag.circuit" }
				}}
		]},
		"circuit-shunt": {
			"patterns": 
			[{
				"name" : "string.quoted",
				"match": "(?xi)\\s*\\b(ckt|circuit)\\s+(?:(?<q>\"|')[^'\"]{1,3}\\k<q>|([^'\"\\s]{1,3}))\\s*",
				"captures": {
					"1": { "name": "entity.other.attribute-name.circuit" },
					"3": { "name": "entity.name.tag.common" }
				}}
		]},
		"dispatch-bus-line-bnu": {			
			"patterns": 
			[{
				"name": "string.dispatch-bus-bna",
				"begin": "(?xi)^(?=\\s*bus\\b)",
				"end": "(\\s*(\\-|\\+)?([0-9]*\\.)?[0-9]+(?![\\-\\+\\.]))?\\s*(?=$|[\\\\\\\/])", 
				"patterns": [
					{"include": "#bus-bnu"},
					{"include": "pg"}
				],
			"endCaptures": {"1":{"name": "constant.numeric.dispatch.bus.factor"}}}				
		]},
		"dispatch-bus-line-bna": {			
			"patterns": 
			[{
				"name": "string.dispatch-bus-bna",
				"begin": "(?xi)^(?=\\s*bus\\b)",
				"end": "(\\s*(\\-|\\+)?([0-9]*\\.)?[0-9]+(?![\\-\\+\\.]))?\\s*(?=$|[\\\\\\\/])", 
				"patterns": [
					{"include": "#bus-bna"},
					{"include": "pg"}
				],
			"endCaptures": {"1":{"name": "constant.numeric.dispatch.bus.factor"}}}				
		]},
		"dispatch-subsystem-line": {			
			"patterns": 
			[{
				"name": "string.dispatch-subsystem-bna",
				"begin": "(?xi)^(?=\\s*(?:sub)?system\\b)",
				"end": "(\\s*(\\-|\\+)?([0-9]*\\.)?[0-9]+(?![\\-\\+\\.]))?\\s*(?=$|[\\\\\\\/])", 
				"patterns": [
					{"include": "#subsystem"},
					{"include": "pg"}
				],
			"endCaptures": {"1":{"name": "constant.numeric.dispatch.subsystem.factor"}}}				
		]},
		"facts": {
			"patterns": 
			[{
				"name" : "string.quoted",
				"match": "(?xi)\\s*\\b(?:(facts)\\s+(?:(?<q>\"|')[^'\"]+\\k<q>|([^'\"\\s]+))|((facts))\\b)",
				"captures": {
					"1": { "name": "entity.name.type.machine" },
					"3": { "name": "entity.name.tag.machineid" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"float": {
			"patterns": 
			[{
				"name" : "constant.numeric.float",
				"match": "(\\-|\\+)?([0-9]*\\.)?[0-9]+(?![\\-\\+\\.])"}
		]},
		"id": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+((id)\\s+(\"[^\"]*\"|'[^']*'|\\w+)|((id))\\b)",
				"captures": {
					"2": { "name": "entity.other.attribute-name.id" },
					"3": { "name": "string.quoted.idname" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"in": {			
			"patterns": 
			[{
				"name": "keyword.operator.in",
				"match": "(?xi)\\b(in)\\b"}
		]},
		"kv": {"patterns": [{"match": "(?xi)\\s*(kv)\\s+([0-9]*\\.?[0-9]+)\\s*",
			"captures": {
				"1": { "name": "entity.name.type.common" },
				"2": { "name": "constant.numeric.common" }		
		}}]},
		"kvrange": {"patterns": [{
			"name": "entity.name.type.kvrange",
			"match": "(?xi)(?:kvrange\\s+([0-9]*\\.?[0-9]+\\s+[0-9]*\\.?[0-9]+)|((kvrange)))\\b",
			"captures": {
				"1": { "name": "constant.numeric.kv" },
				"2":{"name": "invalid.illegal"},
				"3":{"name": "markup.underline"}	
		}}]},
		"kvrange-retire": {"patterns": [{"match": "(?xi)\\s*(kvrange)\\s+([0-9]*\\.?[0-9]+)\\s+([0-9]*\\.?[0-9]+)\\s*",
		"captures": {
			"1": { "name": "entity.name.type.common" },
			"2": { "name": "constant.numeric.common" },
			"3": { "name": "constant.numeric.common" }		
		}}]},
		"language-attribute": {			
				"patterns": 
				[{
					"match": "(?xi)\\s*(%|\\bpercent\\b|mw\\b|mvar\\b)",
					"captures": {
						"1": { "name": "entity.other.attribute-name.language" }
					}}
		]},	
		"language-attribute-pmax": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+\\b(pmax)\\b",
				"captures": {
					"1": { "name": "entity.other.attribute-name.pmax" }
				}}
		]},		
		"language-operators": {			
				"patterns": 
				[{
					"match": "(?xi)\\s+\\b(by|to|from|at)\\b",
					"captures": {
						"1": { "name": "keyword.operator.language" }
					}}
		]},
		"language-operators-by": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+\\b(by)\\b",
				"captures": {
					"1": { "name": "keyword.operator.language.by" }
				}}
		]},		
		"language-operators-from": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+\\b(from)\\b",
				"captures": {
					"1": { "name": "keyword.operator.language.from" }
				}}
		]},		
		"language-operators-to": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+\\b(to)\\b",
				"captures": {
					"1": { "name": "keyword.operator.language.to" }
				}}
		]},		
		"language-types": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+\\b(gen(s|eration)?|load(p|q)?|shunt)\\b",
				"captures": {
					"1": { "name": "entity.name.type.language" }
				}}
		]},	
		"load": {
			"patterns": 
			[{
				"name" : "string.quoted",
				"match": "(?xi)\\s*\\b((load)\\s+(?:(?<q>\"|')[^'\"]{1,2}\\k<q>|([^'\"\\s]{1,2}))|((load))\\b)",
				"captures": {
					"2": { "name": "entity.name.type.machine" },
					"4": { "name": "entity.name.tag.machineid" },
					"5":{"name": "invalid.illegal"},
					"6":{"name": "markup.underline"}
				}}
		]},
		"load-br": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+((load)\\s+(\"[^\"]+\"|'[^']+'|\\w+)|((load))\\b)",
				"captures": {
					"2": { "name": "entity.name.type.node" },
					"3": { "name": "string.quoted.nodename" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"load-id": {			
				"patterns": 
				[{
					"match": "(?xi)\\s*(load)\\s+([0-9]+)\\s+(\"[^\"]*\"|'[^']*'|([0-9\\w]+))",
					"captures": {
						"1": { "name": "entity.name.type.common" },
						"2": { "name": "entity.name.tag.common" },
						"3": { "name": "string.quoted.common" }
					}}
		]},	
		"machine": {
			"patterns": 
			[{
				"name" : "string.quoted",
				"match": "(?xi)\\s*\\b((machine|unit)\\s+(?:(?<q>\"|')[^'\"]{1,2}\\k<q>|([^'\"\\s]{1,2}))|((machine|unit))\\b)",
				"captures": {
					"2": { "name": "entity.name.type.machine" },
					"4": { "name": "entity.name.tag.machineid" },
					"5":{"name": "invalid.illegal"},
					"6":{"name": "markup.underline"}
				}}
		]},
		"machine-br": {
			"patterns": 
			[{
				"name" : "string.quoted",
				"match": "(?xi)\\s*\\b((machine|unit)\\s+(?:(?<q>\"|')[^'\"]+\\k<q>|([^'\"\\s]+))|((machine|unit))\\b)",
				"captures": {
					"2": { "name": "entity.name.type.machine" },
					"4": { "name": "entity.name.tag.machineid" },
					"5":{"name": "invalid.illegal"},
					"6":{"name": "markup.underline"}
				}}
		]},
		"node": {			
				"patterns": 
				[{
					"match": "(?xi)\\s*\\b(from\\s+|to\\s+)?(node)\\s+([0-9]+)\\s*",
					"captures": {
						"1": { "name": "keyword.operator.node" },
						"2": { "name": "entity.name.type.node" },
						"3": { "name": "entity.name.tag.node" }
					}}
		]},
		"node-bnu": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+((node)\\s+([0-9]+)|((node))\\b)",
				"captures": {
					"2": { "name": "entity.name.type.node" },
					"3": { "name": "entity.name.tag.node" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"node-bna": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+((node)\\s+(\"[^\"]+\"|'[^']+'|\\w+)|((node))\\b)",
				"captures": {
					"2": { "name": "entity.name.type.node" },
					"3": { "name": "string.quoted.nodename" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"node-busname": {			
			"patterns": 
			[{
				"match": "(?xi)\\s*\\b(from\\s+|to\\s+)?(node)\\s+((\"[^\"]+\")|('[^']+')|(\\w+))\\s*",
				"captures": {
					"1": { "name": "keyword.operator.common" },
					"2": { "name": "entity.name.type.common" },
					"4": { "name": "string.quoted.common" },
					"5": { "name": "string.quoted.common" },
					"6": { "name": "string.unquoted.common" }
				}}
		]},			
		"section": {			
			"patterns": 
			[{
				"match": "(?xi)\\s*\\b(section)\\s+([0-9]+)",
				"captures": {
					"1": { "name": "entity.name.type.common" },
					"2": { "name": "entity.name.tag.common" }
				}}
		]},
		"step": {			
			"patterns": 
			[{
				"match": "(?xi)\\s+((step)\\s+([0-9]+)|((step)))",
				"captures": {
					"2": { "name": "entity.other.attribute-name.step" },
					"3": { "name": "entity.name.tag.step" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"substation": {			
			"patterns": 
			[{
				"name": "entity.name.type.substation",
				"match": "(?xi)\\s*(?:(?:sub(?:station)?)\\s+(?:((?<q>\"|')[^'\"]+\\k<q>)|([^'\"\\s]+))|((sub(?:station)?))\\b)",
				"captures": {
					"1": { "name": "string.quoted.substation.name" },
					"3": { "name": "entity.name.tag.substation.name" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"subsystem": {			
			"patterns": 
			[{
				"name": "entity.name.type.subsystem",
				"match": "(?xi)\\s*(?:(?:(?:sub)?system)\\s+(?:((?<q>\"|')[^'\"]+\\k<q>)|([^'\"\\s]+))|(((?:sub)?system))\\b)",
				"captures": {
					"1": { "name": "string.quoted.subsystem.name" },
					"3": { "name": "entity.name.tag.substation.name" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"swshunt-br": {
			"patterns": 
			[{
				"name" : "string.quoted",
				"match": "(?xi)\\s*\\b((swshunt)\\s+(?:(?<q>\"|')[^'\"]+\\k<q>|([^'\"\\s]+))|((swshunt))\\b)",
				"captures": {
					"2": { "name": "entity.name.type.machine" },
					"4": { "name": "entity.name.tag.machineid" },
					"5":{"name": "invalid.illegal"},
					"6":{"name": "markup.underline"}
				}}
		]},
		"owner": {			
				"patterns": 
				[{
					"match": "(?xi)\\s*(owner)\\s+([0-9]+)\\s*",
					"captures": {
						"1": { "name": "entity.name.type.common" },
						"2": { "name": "entity.name.tag.common" }
					}}
		]},
		"owners": {			
			"patterns": 
			[{
				"match": "(?xi)(owners)(\\s+([0-9]+)\\s+([0-9]+))\\s*",
				"captures": {
					"1": { "name": "entity.name.type.common" },
					"2": { "name": "entity.name.tag.common" }
				}}
		]},			
		"strings-unlimited": {			
				"patterns": 
				[
						{"include": "#string-double-unlimited"},
						{"include": "#string-single-unlimited"},
						{"include": "#string-unquoted"}
					]},
		"string-double-unlimited": {
			"name": "string.quoted.double.common",
			"begin": "(?<![\"'])\"(?=.*\")",
			"end": "[\"\r\n]",
			"patterns": [
				{
					"name": "constant.character.escape.common",
					"match": "\\\\."
				}
			]
		},
		"string-single-unlimited": {
			"name": "string.quoted.single.common",
			"begin": "(?<![\"'])'(?=.*')",
			"end": "['\r\n]",
			"patterns": [
				{
					"name": "constant.character.escape.common",
					"match": "\\\\."
				}
			]
		},
		"string-unquoted": {"name": "string.unquoted.common", "match":"\\b\\w+\\b"},
		"system": {			
			"patterns": 
			[{
				"name": "entity.name.type.common",
				"begin": "(?xi)((sub)?system)\\s*",
				"end": "\\s*((?=-?[0-9]*\\.?[0-9]+)|(?=$))", "patterns": [
					{"include": "#strings-unlimited"},
					{"include": "#kvrange"},
					{"include": "pg"}
				]}
		]},
		"twotermdc": {
			"patterns": 
			[{
				"name" : "string.quoted",
				"match": "(?xi)\\s*\\b(?:(twotermdc)\\s+(?:(?<q>\"|')[^'\"]+\\k<q>|([^'\"\\s]+))|((twotermdc))\\b)",
				"captures": {
					"1": { "name": "entity.name.type.machine" },
					"3": { "name": "entity.name.tag.machineid" },
					"4":{"name": "invalid.illegal"},
					"5":{"name": "markup.underline"}
				}}
		]},
		"within-outside": {			
			"patterns": 
			[{
				"name": "keyword.operator.within-outside",
				"match": "(?xi)\\s+(?:within\\s+(\\d+)\\s+(bus(?:es)?)\\s+outside|((within)))\\b",
				"captures": {
					"1": { "name": "constant.numeric.number-of-buses" },
					"2": { "name": "entity.name.type.bus" },
					"3":{"name": "invalid.illegal"},
					"4":{"name": "markup.underline"}	
				}}
		]}
	},
	"scopeName": "source.pg.common"
}